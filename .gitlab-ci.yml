stages:
  - build
  - test

default:
  image: node:24  # version to be compatible with package.json 4.2.2 but its very old

.node:build:
  stage: build
  variables:
    NPM_CONFIG_CACHE: "$CI_PROJECT_DIR/.npm"  # to override cache dir from root to local project dir
  before_script:
    - node -v # get the node version
    - npm -v # get npm version toolkit manager
    #- npm install # installs dependencies looking into the package.json
    - ls -la
    - npm install --package-lock-only  # to generate pakage lock file since npm ci sowrks only if there is apckage lock file
    - npm ci --omit=dev #--only=production # only the installs dependencies not dev dependecies and delete exsisting node modules if exsists
    - ls -la
  script:
    - echo "node env"
    - node index.js
    - ls -la
  cache: # cache the installations based on key file; cache is changed only if the file changes
    key:
      files:
        - package.json 
    paths:
      - .npm/
      - package-lock.json
      #- node_modules/  # cannot cacahe node_modules when using npm ci since it deletes on each install need to cache .npm
    policy: pull-push  # default; we can use only push or pull

node:test_async:
  stage: test
  before_script:
    - npm install --package-lock-only
    - npm ci
  script:
    - echo "Testing the async application"
    - node ./specs/start.js ./specs/async.spec.js

node:test_db:
  stage: test
  before_script:
    - npm install --package-lock-only
    - npm ci
  services:
    - postgres:9.5.0
  script:
    - echo "Testing the DB"
    - node ./specs/start.js ./specs/db-postgres.spec.js

.dockerize:node:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "building the image"
    - echo "$CI_REGISTRY"
    - echo "$CI_REGISTRY_IMAGE"
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA