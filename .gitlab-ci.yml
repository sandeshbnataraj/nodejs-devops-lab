stages:
  - build
  - test

node:build:
  stage: build
  image: node:24  # version to be compatible with package.json
  before_script:
    - node -v # get the node version
    - npm -v # get npm version toolkit manager
    #- npm install # installs dependencies looking into the package.json
    - npm ci --only=production # only the installs dependencies not dev dependecies and delete exsisting node modules if exsists
  script:
    - echo "node env"
    - node index.js
  cache: # cache the installations based on key file; cache is changed only if the file changes
    key:
      files:
        - package.json
    paths:
      - node_modules/
    policy: pull-push  # default; we can use only push or pull

.dockerize:node:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "building the image"
    - echo "$CI_REGISTRY"
    - echo "$CI_REGISTRY_IMAGE"
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA